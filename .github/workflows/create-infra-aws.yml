name: AWS - Create Infrastructure

on:
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    defaults:
      run:
        working-directory: terraform/infra

    steps:
      # We need this to work with our folders
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AWS CLI
        id: check_aws_cli
        run: |
          if ! command -v aws &> /dev/null; then
            echo "AWS CLI not found, installing..."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install --update
          else
            echo "AWS CLI is already installed"
          fi

      - name: Create S3 Bucket if it does not exist
        run: |
          if aws s3api head-bucket --bucket "${{ secrets.AWS_BUCKET_NAME }}" 2>/dev/null; then
            echo "Bucket already exists."
          else
            aws s3api create-bucket --bucket "${{ secrets.AWS_BUCKET_NAME }}" --region "${{ secrets.AWS_REGION }}"
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init -upgrade

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: |
          terraform plan \
          -var="node_role_arn=${{ secrets.NODE_ROLE_ARN }}" \
          -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          -var="aws_session_token=${{ secrets.AWS_SESSION_TOKEN }}" \
          -var="aws_region=${{ secrets.AWS_REGION }}" \
          -var="aws_bucket_name=${{ secrets.AWS_BUCKET_NAME }}"

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
          -var="node_role_arn=${{ secrets.NODE_ROLE_ARN }}" \
          -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          -var="aws_session_token=${{ secrets.AWS_SESSION_TOKEN }}" \
          -var="aws_region=${{ secrets.AWS_REGION }}" \
          -var="aws_bucket_name=${{ secrets.AWS_BUCKET_NAME }}"

      - name: Terraform Output
        id: output
        run: terraform output -json

      - name: Display Application DNS
        run: |
          echo "Application URL: ${{ steps.output.outputs.APP_URL }}"

      - name: Display Application IP
        run: |
          echo "Application IP: ${{ steps.output.outputs.APP_IP }}"

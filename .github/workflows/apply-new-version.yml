name: Apply new version of the Application

on:
  workflow_run:
    workflows: ["Build Docker Image"]
    types:
      - completed
jobs:
  apply-new-version:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform/infra

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Prevents: Error: failed to refresh cached credentials, no EC2 IMDS role found
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: terraform init -reconfigure
      
      - name: Terraform Plan
        run: |
          terraform plan \
          -var="node_role_arn=${{ secrets.NODE_ROLE_ARN }}" \
          -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          -var="aws_session_token=${{ secrets.AWS_SESSION_TOKEN }}" \
          -var="aws_region=${{ secrets.AWS_REGION }}" \
          -var="aws_bucket_name=${{ secrets.AWS_BUCKET_NAME }}"

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
          -var="node_role_arn=${{ secrets.NODE_ROLE_ARN }}" \
          -var="aws_access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -var="aws_secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          -var="aws_session_token=${{ secrets.AWS_SESSION_TOKEN }}" \
          -var="aws_region=${{ secrets.AWS_REGION }}" \
          -var="aws_bucket_name=${{ secrets.AWS_BUCKET_NAME }}"
          -var="image_version=${{ github.sha }}"
